// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
//	protoc-gen-go v1.31.0
//	protoc		  v4.24.3
// source: team.proto

package team

import (
	common "github.com/cclhsu/gin-grpc-gorm/generated/grpc/pb/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetTeamByEmailRequest struct {
	state		  protoimpl.MessageState
	sizeCache	  protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *GetTeamByEmailRequest) Reset() {
	*x = GetTeamByEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamByEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamByEmailRequest) ProtoMessage() {}

func (x *GetTeamByEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamByEmailRequest.ProtoReflect.Descriptor instead.
func (*GetTeamByEmailRequest) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{0}
}

func (x *GetTeamByEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type GetTeamByIdRequest struct {
	state		  protoimpl.MessageState
	sizeCache	  protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetTeamByIdRequest) Reset() {
	*x = GetTeamByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamByIdRequest) ProtoMessage() {}

func (x *GetTeamByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamByIdRequest.ProtoReflect.Descriptor instead.
func (*GetTeamByIdRequest) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{1}
}

func (x *GetTeamByIdRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetTeamByNameRequest struct {
	state		  protoimpl.MessageState
	sizeCache	  protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetTeamByNameRequest) Reset() {
	*x = GetTeamByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamByNameRequest) ProtoMessage() {}

func (x *GetTeamByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamByNameRequest.ProtoReflect.Descriptor instead.
func (*GetTeamByNameRequest) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{2}
}

func (x *GetTeamByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetTeamByTeamNameRequest struct {
	state		  protoimpl.MessageState
	sizeCache	  protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamName string `protobuf:"bytes,1,opt,name=teamName,proto3" json:"teamName,omitempty"`
}

func (x *GetTeamByTeamNameRequest) Reset() {
	*x = GetTeamByTeamNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamByTeamNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamByTeamNameRequest) ProtoMessage() {}

func (x *GetTeamByTeamNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamByTeamNameRequest.ProtoReflect.Descriptor instead.
func (*GetTeamByTeamNameRequest) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{3}
}

func (x *GetTeamByTeamNameRequest) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

type GetTeamByUuidRequest struct {
	state		  protoimpl.MessageState
	sizeCache	  protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UUID string `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
}

func (x *GetTeamByUuidRequest) Reset() {
	*x = GetTeamByUuidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamByUuidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamByUuidRequest) ProtoMessage() {}

func (x *GetTeamByUuidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamByUuidRequest.ProtoReflect.Descriptor instead.
func (*GetTeamByUuidRequest) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{4}
}

func (x *GetTeamByUuidRequest) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

type ListTeamIdUuid struct {
	state		  protoimpl.MessageState
	sizeCache	  protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamIdUuids []*common.IdUuid `protobuf:"bytes,1,rep,name=teamIdUuids,proto3" json:"teamIdUuids,omitempty"`
}

func (x *ListTeamIdUuid) Reset() {
	*x = ListTeamIdUuid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTeamIdUuid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTeamIdUuid) ProtoMessage() {}

func (x *ListTeamIdUuid) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTeamIdUuid.ProtoReflect.Descriptor instead.
func (*ListTeamIdUuid) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{5}
}

func (x *ListTeamIdUuid) GetTeamIdUuids() []*common.IdUuid {
	if x != nil {
		return x.TeamIdUuids
	}
	return nil
}

type ListTeamsResponse struct {
	state		  protoimpl.MessageState
	sizeCache	  protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teams []*Team `protobuf:"bytes,1,rep,name=teams,proto3" json:"teams,omitempty"`
}

func (x *ListTeamsResponse) Reset() {
	*x = ListTeamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTeamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTeamsResponse) ProtoMessage() {}

func (x *ListTeamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTeamsResponse.ProtoReflect.Descriptor instead.
func (*ListTeamsResponse) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{6}
}

func (x *ListTeamsResponse) GetTeams() []*Team {
	if x != nil {
		return x.Teams
	}
	return nil
}

type ListTeamsMetadataResponse struct {
	state		  protoimpl.MessageState
	sizeCache	  protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamMetadataResponses []*TeamMetadataResponse `protobuf:"bytes,1,rep,name=teamMetadataResponses,proto3" json:"teamMetadataResponses,omitempty"`
}

func (x *ListTeamsMetadataResponse) Reset() {
	*x = ListTeamsMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTeamsMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTeamsMetadataResponse) ProtoMessage() {}

func (x *ListTeamsMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTeamsMetadataResponse.ProtoReflect.Descriptor instead.
func (*ListTeamsMetadataResponse) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{7}
}

func (x *ListTeamsMetadataResponse) GetTeamMetadataResponses() []*TeamMetadataResponse {
	if x != nil {
		return x.TeamMetadataResponses
	}
	return nil
}

type ListTeamsContentResponse struct {
	state		  protoimpl.MessageState
	sizeCache	  protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamContentResponses []*TeamContentResponse `protobuf:"bytes,1,rep,name=teamContentResponses,proto3" json:"teamContentResponses,omitempty"`
}

func (x *ListTeamsContentResponse) Reset() {
	*x = ListTeamsContentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTeamsContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTeamsContentResponse) ProtoMessage() {}

func (x *ListTeamsContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTeamsContentResponse.ProtoReflect.Descriptor instead.
func (*ListTeamsContentResponse) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{8}
}

func (x *ListTeamsContentResponse) GetTeamContentResponses() []*TeamContentResponse {
	if x != nil {
		return x.TeamContentResponses
	}
	return nil
}

type CreateTeamRequest struct {
	state		  protoimpl.MessageState
	sizeCache	  protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID		 string		   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UUID	 string		   `protobuf:"bytes,2,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Metadata *TeamMetadata `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Content	 *TeamContent  `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *CreateTeamRequest) Reset() {
	*x = CreateTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTeamRequest) ProtoMessage() {}

func (x *CreateTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTeamRequest.ProtoReflect.Descriptor instead.
func (*CreateTeamRequest) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{9}
}

func (x *CreateTeamRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *CreateTeamRequest) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *CreateTeamRequest) GetMetadata() *TeamMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreateTeamRequest) GetContent() *TeamContent {
	if x != nil {
		return x.Content
	}
	return nil
}

type UpdateTeamRequest struct {
	state		  protoimpl.MessageState
	sizeCache	  protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UUID	 string		   `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Metadata *TeamMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Content	 *TeamContent  `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *UpdateTeamRequest) Reset() {
	*x = UpdateTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeamRequest) ProtoMessage() {}

func (x *UpdateTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeamRequest.ProtoReflect.Descriptor instead.
func (*UpdateTeamRequest) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateTeamRequest) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *UpdateTeamRequest) GetMetadata() *TeamMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UpdateTeamRequest) GetContent() *TeamContent {
	if x != nil {
		return x.Content
	}
	return nil
}

type UpdateTeamMetadataRequest struct {
	state		  protoimpl.MessageState
	sizeCache	  protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UUID	 string		   `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Metadata *TeamMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *UpdateTeamMetadataRequest) Reset() {
	*x = UpdateTeamMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeamMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeamMetadataRequest) ProtoMessage() {}

func (x *UpdateTeamMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeamMetadataRequest.ProtoReflect.Descriptor instead.
func (*UpdateTeamMetadataRequest) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateTeamMetadataRequest) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *UpdateTeamMetadataRequest) GetMetadata() *TeamMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type UpdateTeamContentRequest struct {
	state		  protoimpl.MessageState
	sizeCache	  protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UUID	string		 `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Content *TeamContent `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *UpdateTeamContentRequest) Reset() {
	*x = UpdateTeamContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeamContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeamContentRequest) ProtoMessage() {}

func (x *UpdateTeamContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeamContentRequest.ProtoReflect.Descriptor instead.
func (*UpdateTeamContentRequest) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateTeamContentRequest) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *UpdateTeamContentRequest) GetContent() *TeamContent {
	if x != nil {
		return x.Content
	}
	return nil
}

type TeamMetadataResponse struct {
	state		  protoimpl.MessageState
	sizeCache	  protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID		 string		   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UUID	 string		   `protobuf:"bytes,2,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Metadata *TeamMetadata `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *TeamMetadataResponse) Reset() {
	*x = TeamMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamMetadataResponse) ProtoMessage() {}

func (x *TeamMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamMetadataResponse.ProtoReflect.Descriptor instead.
func (*TeamMetadataResponse) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{13}
}

func (x *TeamMetadataResponse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *TeamMetadataResponse) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *TeamMetadataResponse) GetMetadata() *TeamMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type TeamContentResponse struct {
	state		  protoimpl.MessageState
	sizeCache	  protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID		string		 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UUID	string		 `protobuf:"bytes,2,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Content *TeamContent `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *TeamContentResponse) Reset() {
	*x = TeamContentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamContentResponse) ProtoMessage() {}

func (x *TeamContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamContentResponse.ProtoReflect.Descriptor instead.
func (*TeamContentResponse) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{14}
}

func (x *TeamContentResponse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *TeamContentResponse) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *TeamContentResponse) GetContent() *TeamContent {
	if x != nil {
		return x.Content
	}
	return nil
}

type Team struct {
	state		  protoimpl.MessageState
	sizeCache	  protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID		 string		   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UUID	 string		   `protobuf:"bytes,2,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Metadata *TeamMetadata `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Content	 *TeamContent  `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Team) Reset() {
	*x = Team{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Team) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Team) ProtoMessage() {}

func (x *Team) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Team.ProtoReflect.Descriptor instead.
func (*Team) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{15}
}

func (x *Team) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Team) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *Team) GetMetadata() *TeamMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Team) GetContent() *TeamContent {
	if x != nil {
		return x.Content
	}
	return nil
}

type TeamMetadata struct {
	state		  protoimpl.MessageState
	sizeCache	  protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string			 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Dates *common.CommonDate `protobuf:"bytes,2,opt,name=dates,proto3" json:"dates,omitempty"`
}

func (x *TeamMetadata) Reset() {
	*x = TeamMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamMetadata) ProtoMessage() {}

func (x *TeamMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamMetadata.ProtoReflect.Descriptor instead.
func (*TeamMetadata) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{16}
}

func (x *TeamMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TeamMetadata) GetDates() *common.CommonDate {
	if x != nil {
		return x.Dates
	}
	return nil
}

type TeamContent struct {
	state		  protoimpl.MessageState
	sizeCache	  protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email		 string			  `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Members		 []*common.IdUuid `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
	ProductOwner *common.IdUuid	  `protobuf:"bytes,3,opt,name=productOwner,proto3" json:"productOwner,omitempty"`
	ScrumMaster	 *common.IdUuid	  `protobuf:"bytes,4,opt,name=scrumMaster,proto3" json:"scrumMaster,omitempty"`
}

func (x *TeamContent) Reset() {
	*x = TeamContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamContent) ProtoMessage() {}

func (x *TeamContent) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamContent.ProtoReflect.Descriptor instead.
func (*TeamContent) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{17}
}

func (x *TeamContent) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *TeamContent) GetMembers() []*common.IdUuid {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *TeamContent) GetProductOwner() *common.IdUuid {
	if x != nil {
		return x.ProductOwner
	}
	return nil
}

func (x *TeamContent) GetScrumMaster() *common.IdUuid {
	if x != nil {
		return x.ScrumMaster
	}
	return nil
}

var File_team_proto protoreflect.FileDescriptor

var file_team_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x74, 0x65,
	0x61, 0x6d, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2d, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x24, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x44, 0x22, 0x2a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x36,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x42, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65,
	0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65,
	0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61,
	0x6d, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x55,
	0x49, 0x44, 0x22, 0x42, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x64,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x0b, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x55, 0x75,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x49, 0x64, 0x55, 0x75, 0x69, 0x64, 0x52, 0x0b, 0x74, 0x65, 0x61, 0x6d, 0x49,
	0x64, 0x55, 0x75, 0x69, 0x64, 0x73, 0x22, 0x35, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65,
	0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x74,
	0x65, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x74, 0x65, 0x61,
	0x6d, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x22, 0x6d, 0x0a,
	0x19, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x15, 0x74, 0x65,
	0x61, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x65, 0x61, 0x6d,
	0x2e, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x15, 0x74, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0x69, 0x0a, 0x18,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x14, 0x74, 0x65, 0x61, 0x6d,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x54, 0x65,
	0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x14, 0x74, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x55, 0x49,
	0x44, 0x12, 0x2e, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x2b, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x84,
	0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x65, 0x61,
	0x6d, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x65, 0x61, 0x6d,
	0x2e, 0x54, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x5f, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x61, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e,
	0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5b, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x54,
	0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0x6a, 0x0a, 0x14, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x55,
	0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12,
	0x2e, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x66, 0x0a, 0x13, 0x54, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x65,
	0x61, 0x6d, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x55, 0x55, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x54, 0x65,
	0x61, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x54, 0x65, 0x61,
	0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x22, 0x4c, 0x0a, 0x0c, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x05, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22,
	0xb3, 0x01, 0x0a, 0x0b, 0x54, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x28, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x49, 0x64, 0x55, 0x75, 0x69, 0x64, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12,
	0x32, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49,
	0x64, 0x55, 0x75, 0x69, 0x64, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x75, 0x6d, 0x4d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x49, 0x64, 0x55, 0x75, 0x69, 0x64, 0x52, 0x0b, 0x73, 0x63, 0x72, 0x75, 0x6d, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x32, 0xf7, 0x07, 0x0a, 0x0b, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61,
	0x6d, 0x49, 0x64, 0x73, 0x41, 0x6e, 0x64, 0x55, 0x55, 0x49, 0x44, 0x73, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x55, 0x75, 0x69, 0x64, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x09,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x17, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x11,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x74, 0x65, 0x61, 0x6d,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x10,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x1a, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x65, 0x61, 0x6d, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0a, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x22, 0x00, 0x12,
	0x33, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x17, 0x2e,
	0x74, 0x65, 0x61, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x54, 0x65,
	0x61, 0x6d, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x61, 0x6d, 0x12, 0x17, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x74, 0x65,
	0x61, 0x6d, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x1a, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x22,
	0x00, 0x12, 0x35, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x42, 0x79, 0x49, 0x64,
	0x12, 0x18, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x74, 0x65, 0x61,
	0x6d, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x61, 0x6d, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x2e, 0x74, 0x65, 0x61, 0x6d,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x54, 0x65, 0x61,
	0x6d, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x42, 0x79,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x65, 0x61, 0x6d, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x22, 0x00,
	0x12, 0x53, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x54,
	0x65, 0x61, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x74, 0x65, 0x61,
	0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x74, 0x65, 0x61,
	0x6d, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x65,
	0x61, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x2e, 0x74, 0x65, 0x61,
	0x6d, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x54, 0x65,
	0x61, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x65, 0x61, 0x6d, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x08, 0x5a, 0x06, 0x2e, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_team_proto_rawDescOnce sync.Once
	file_team_proto_rawDescData = file_team_proto_rawDesc
)

func file_team_proto_rawDescGZIP() []byte {
	file_team_proto_rawDescOnce.Do(func() {
		file_team_proto_rawDescData = protoimpl.X.CompressGZIP(file_team_proto_rawDescData)
	})
	return file_team_proto_rawDescData
}

var file_team_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_team_proto_goTypes = []interface{}{
	(*GetTeamByEmailRequest)(nil),	   // 0: team.GetTeamByEmailRequest
	(*GetTeamByIdRequest)(nil),		   // 1: team.GetTeamByIdRequest
	(*GetTeamByNameRequest)(nil),	   // 2: team.GetTeamByNameRequest
	(*GetTeamByTeamNameRequest)(nil),  // 3: team.GetTeamByTeamNameRequest
	(*GetTeamByUuidRequest)(nil),	   // 4: team.GetTeamByUuidRequest
	(*ListTeamIdUuid)(nil),			   // 5: team.ListTeamIdUuid
	(*ListTeamsResponse)(nil),		   // 6: team.ListTeamsResponse
	(*ListTeamsMetadataResponse)(nil), // 7: team.ListTeamsMetadataResponse
	(*ListTeamsContentResponse)(nil),  // 8: team.ListTeamsContentResponse
	(*CreateTeamRequest)(nil),		   // 9: team.CreateTeamRequest
	(*UpdateTeamRequest)(nil),		   // 10: team.UpdateTeamRequest
	(*UpdateTeamMetadataRequest)(nil), // 11: team.UpdateTeamMetadataRequest
	(*UpdateTeamContentRequest)(nil),  // 12: team.UpdateTeamContentRequest
	(*TeamMetadataResponse)(nil),	   // 13: team.TeamMetadataResponse
	(*TeamContentResponse)(nil),	   // 14: team.TeamContentResponse
	(*Team)(nil),					   // 15: team.Team
	(*TeamMetadata)(nil),			   // 16: team.TeamMetadata
	(*TeamContent)(nil),			   // 17: team.TeamContent
	(*common.IdUuid)(nil),			   // 18: common.IdUuid
	(*common.CommonDate)(nil),		   // 19: common.CommonDate
	(*emptypb.Empty)(nil),			   // 20: google.protobuf.Empty
}
var file_team_proto_depIdxs = []int32{
	18, // 0: team.ListTeamIdUuid.teamIdUuids:type_name -> common.IdUuid
	15, // 1: team.ListTeamsResponse.teams:type_name -> team.Team
	13, // 2: team.ListTeamsMetadataResponse.teamMetadataResponses:type_name -> team.TeamMetadataResponse
	14, // 3: team.ListTeamsContentResponse.teamContentResponses:type_name -> team.TeamContentResponse
	16, // 4: team.CreateTeamRequest.metadata:type_name -> team.TeamMetadata
	17, // 5: team.CreateTeamRequest.content:type_name -> team.TeamContent
	16, // 6: team.UpdateTeamRequest.metadata:type_name -> team.TeamMetadata
	17, // 7: team.UpdateTeamRequest.content:type_name -> team.TeamContent
	16, // 8: team.UpdateTeamMetadataRequest.metadata:type_name -> team.TeamMetadata
	17, // 9: team.UpdateTeamContentRequest.content:type_name -> team.TeamContent
	16, // 10: team.TeamMetadataResponse.metadata:type_name -> team.TeamMetadata
	17, // 11: team.TeamContentResponse.content:type_name -> team.TeamContent
	16, // 12: team.Team.metadata:type_name -> team.TeamMetadata
	17, // 13: team.Team.content:type_name -> team.TeamContent
	19, // 14: team.TeamMetadata.dates:type_name -> common.CommonDate
	18, // 15: team.TeamContent.members:type_name -> common.IdUuid
	18, // 16: team.TeamContent.productOwner:type_name -> common.IdUuid
	18, // 17: team.TeamContent.scrumMaster:type_name -> common.IdUuid
	20, // 18: team.TeamService.ListTeamIdsAndUUIDs:input_type -> google.protobuf.Empty
	20, // 19: team.TeamService.ListTeams:input_type -> google.protobuf.Empty
	20, // 20: team.TeamService.ListTeamsMetadata:input_type -> google.protobuf.Empty
	20, // 21: team.TeamService.ListTeamsContent:input_type -> google.protobuf.Empty
	4,	// 22: team.TeamService.GetTeam:input_type -> team.GetTeamByUuidRequest
	9,	// 23: team.TeamService.CreateTeam:input_type -> team.CreateTeamRequest
	10, // 24: team.TeamService.UpdateTeam:input_type -> team.UpdateTeamRequest
	4,	// 25: team.TeamService.DeleteTeam:input_type -> team.GetTeamByUuidRequest
	1,	// 26: team.TeamService.GetTeamById:input_type -> team.GetTeamByIdRequest
	2,	// 27: team.TeamService.GetTeamByName:input_type -> team.GetTeamByNameRequest
	0,	// 28: team.TeamService.GetTeamByEmail:input_type -> team.GetTeamByEmailRequest
	11, // 29: team.TeamService.UpdateTeamMetadata:input_type -> team.UpdateTeamMetadataRequest
	12, // 30: team.TeamService.UpdateTeamContent:input_type -> team.UpdateTeamContentRequest
	4,	// 31: team.TeamService.GetTeamMetadata:input_type -> team.GetTeamByUuidRequest
	4,	// 32: team.TeamService.GetTeamContent:input_type -> team.GetTeamByUuidRequest
	5,	// 33: team.TeamService.ListTeamIdsAndUUIDs:output_type -> team.ListTeamIdUuid
	6,	// 34: team.TeamService.ListTeams:output_type -> team.ListTeamsResponse
	7,	// 35: team.TeamService.ListTeamsMetadata:output_type -> team.ListTeamsMetadataResponse
	8,	// 36: team.TeamService.ListTeamsContent:output_type -> team.ListTeamsContentResponse
	15, // 37: team.TeamService.GetTeam:output_type -> team.Team
	15, // 38: team.TeamService.CreateTeam:output_type -> team.Team
	15, // 39: team.TeamService.UpdateTeam:output_type -> team.Team
	15, // 40: team.TeamService.DeleteTeam:output_type -> team.Team
	15, // 41: team.TeamService.GetTeamById:output_type -> team.Team
	15, // 42: team.TeamService.GetTeamByName:output_type -> team.Team
	15, // 43: team.TeamService.GetTeamByEmail:output_type -> team.Team
	13, // 44: team.TeamService.UpdateTeamMetadata:output_type -> team.TeamMetadataResponse
	14, // 45: team.TeamService.UpdateTeamContent:output_type -> team.TeamContentResponse
	13, // 46: team.TeamService.GetTeamMetadata:output_type -> team.TeamMetadataResponse
	14, // 47: team.TeamService.GetTeamContent:output_type -> team.TeamContentResponse
	33, // [33:48] is the sub-list for method output_type
	18, // [18:33] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,	// [0:18] is the sub-list for field type_name
}

func init() { file_team_proto_init() }
func file_team_proto_init() {
	if File_team_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_team_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamByEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamByTeamNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamByUuidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTeamIdUuid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTeamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTeamsMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTeamsContentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTeamMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTeamContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamContentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Team); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_team_proto_rawDesc,
			NumEnums:	   0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:		   file_team_proto_goTypes,
		DependencyIndexes: file_team_proto_depIdxs,
		MessageInfos:	   file_team_proto_msgTypes,
	}.Build()
	File_team_proto = out.File
	file_team_proto_rawDesc = nil
	file_team_proto_goTypes = nil
	file_team_proto_depIdxs = nil
}
