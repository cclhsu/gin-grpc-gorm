// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
//	protoc-gen-go v1.31.0
//	protoc		  v4.24.3
// source: common.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GENERAL_STATUS_TYPES int32

const (
	GENERAL_STATUS_TYPES_GENERAL_STATUS_TYPES_UNSPECIFIED GENERAL_STATUS_TYPES = 0
	GENERAL_STATUS_TYPES_GENERAL_STATUS_TYPES_INACTIVE	  GENERAL_STATUS_TYPES = 1
	GENERAL_STATUS_TYPES_GENERAL_STATUS_TYPES_ACTIVE	  GENERAL_STATUS_TYPES = 2
	GENERAL_STATUS_TYPES_GENERAL_STATUS_TYPES_PLANNED	  GENERAL_STATUS_TYPES = 3
	GENERAL_STATUS_TYPES_GENERAL_STATUS_TYPES_TODO		  GENERAL_STATUS_TYPES = 4
	GENERAL_STATUS_TYPES_GENERAL_STATUS_TYPES_IN_PROGRESS GENERAL_STATUS_TYPES = 5
	GENERAL_STATUS_TYPES_GENERAL_STATUS_TYPES_DONE		  GENERAL_STATUS_TYPES = 6
	GENERAL_STATUS_TYPES_GENERAL_STATUS_TYPES_COMPLETED	  GENERAL_STATUS_TYPES = 7
	GENERAL_STATUS_TYPES_GENERAL_STATUS_TYPES_CANCELLED	  GENERAL_STATUS_TYPES = 8
)

// Enum value maps for GENERAL_STATUS_TYPES.
var (
	GENERAL_STATUS_TYPES_name = map[int32]string{
		0: "GENERAL_STATUS_TYPES_UNSPECIFIED",
		1: "GENERAL_STATUS_TYPES_INACTIVE",
		2: "GENERAL_STATUS_TYPES_ACTIVE",
		3: "GENERAL_STATUS_TYPES_PLANNED",
		4: "GENERAL_STATUS_TYPES_TODO",
		5: "GENERAL_STATUS_TYPES_IN_PROGRESS",
		6: "GENERAL_STATUS_TYPES_DONE",
		7: "GENERAL_STATUS_TYPES_COMPLETED",
		8: "GENERAL_STATUS_TYPES_CANCELLED",
	}
	GENERAL_STATUS_TYPES_value = map[string]int32{
		"GENERAL_STATUS_TYPES_UNSPECIFIED": 0,
		"GENERAL_STATUS_TYPES_INACTIVE":	1,
		"GENERAL_STATUS_TYPES_ACTIVE":		2,
		"GENERAL_STATUS_TYPES_PLANNED":		3,
		"GENERAL_STATUS_TYPES_TODO":		4,
		"GENERAL_STATUS_TYPES_IN_PROGRESS": 5,
		"GENERAL_STATUS_TYPES_DONE":		6,
		"GENERAL_STATUS_TYPES_COMPLETED":	7,
		"GENERAL_STATUS_TYPES_CANCELLED":	8,
	}
)

func (x GENERAL_STATUS_TYPES) Enum() *GENERAL_STATUS_TYPES {
	p := new(GENERAL_STATUS_TYPES)
	*p = x
	return p
}

func (x GENERAL_STATUS_TYPES) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GENERAL_STATUS_TYPES) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[0].Descriptor()
}

func (GENERAL_STATUS_TYPES) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[0]
}

func (x GENERAL_STATUS_TYPES) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GENERAL_STATUS_TYPES.Descriptor instead.
func (GENERAL_STATUS_TYPES) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

type PROJECT_ROLE_TYPES int32

const (
	PROJECT_ROLE_TYPES_PROJECT_ROLE_TYPES_UNSPECIFIED PROJECT_ROLE_TYPES = 0
	PROJECT_ROLE_TYPES_PROJECT_ROLE_TYPES_PM		  PROJECT_ROLE_TYPES = 1
	PROJECT_ROLE_TYPES_PROJECT_ROLE_TYPES_EM		  PROJECT_ROLE_TYPES = 2
	PROJECT_ROLE_TYPES_PROJECT_ROLE_TYPES_DEV		  PROJECT_ROLE_TYPES = 3
	PROJECT_ROLE_TYPES_PROJECT_ROLE_TYPES_QA		  PROJECT_ROLE_TYPES = 4
	PROJECT_ROLE_TYPES_PROJECT_ROLE_TYPES_BA		  PROJECT_ROLE_TYPES = 5
	PROJECT_ROLE_TYPES_PROJECT_ROLE_TYPES_UX		  PROJECT_ROLE_TYPES = 6
	PROJECT_ROLE_TYPES_PROJECT_ROLE_TYPES_O			  PROJECT_ROLE_TYPES = 7
)

// Enum value maps for PROJECT_ROLE_TYPES.
var (
	PROJECT_ROLE_TYPES_name = map[int32]string{
		0: "PROJECT_ROLE_TYPES_UNSPECIFIED",
		1: "PROJECT_ROLE_TYPES_PM",
		2: "PROJECT_ROLE_TYPES_EM",
		3: "PROJECT_ROLE_TYPES_DEV",
		4: "PROJECT_ROLE_TYPES_QA",
		5: "PROJECT_ROLE_TYPES_BA",
		6: "PROJECT_ROLE_TYPES_UX",
		7: "PROJECT_ROLE_TYPES_O",
	}
	PROJECT_ROLE_TYPES_value = map[string]int32{
		"PROJECT_ROLE_TYPES_UNSPECIFIED": 0,
		"PROJECT_ROLE_TYPES_PM":		  1,
		"PROJECT_ROLE_TYPES_EM":		  2,
		"PROJECT_ROLE_TYPES_DEV":		  3,
		"PROJECT_ROLE_TYPES_QA":		  4,
		"PROJECT_ROLE_TYPES_BA":		  5,
		"PROJECT_ROLE_TYPES_UX":		  6,
		"PROJECT_ROLE_TYPES_O":			  7,
	}
)

func (x PROJECT_ROLE_TYPES) Enum() *PROJECT_ROLE_TYPES {
	p := new(PROJECT_ROLE_TYPES)
	*p = x
	return p
}

func (x PROJECT_ROLE_TYPES) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PROJECT_ROLE_TYPES) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[1].Descriptor()
}

func (PROJECT_ROLE_TYPES) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[1]
}

func (x PROJECT_ROLE_TYPES) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PROJECT_ROLE_TYPES.Descriptor instead.
func (PROJECT_ROLE_TYPES) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

type RELATION_TYPES int32

const (
	RELATION_TYPES_RELATION_TYPES_UNSPECIFIED  RELATION_TYPES = 0
	RELATION_TYPES_RELATION_TYPES_PARENT	   RELATION_TYPES = 1
	RELATION_TYPES_RELATION_TYPES_SUBTASKS	   RELATION_TYPES = 2
	RELATION_TYPES_RELATION_TYPES_PREDECESSORS RELATION_TYPES = 3
	RELATION_TYPES_RELATION_TYPES_SUCCESSORS   RELATION_TYPES = 4
	RELATION_TYPES_RELATION_TYPES_RELATES_TO   RELATION_TYPES = 5
	RELATION_TYPES_RELATION_TYPES_BLOCKED_BY   RELATION_TYPES = 6
)

// Enum value maps for RELATION_TYPES.
var (
	RELATION_TYPES_name = map[int32]string{
		0: "RELATION_TYPES_UNSPECIFIED",
		1: "RELATION_TYPES_PARENT",
		2: "RELATION_TYPES_SUBTASKS",
		3: "RELATION_TYPES_PREDECESSORS",
		4: "RELATION_TYPES_SUCCESSORS",
		5: "RELATION_TYPES_RELATES_TO",
		6: "RELATION_TYPES_BLOCKED_BY",
	}
	RELATION_TYPES_value = map[string]int32{
		"RELATION_TYPES_UNSPECIFIED":  0,
		"RELATION_TYPES_PARENT":	   1,
		"RELATION_TYPES_SUBTASKS":	   2,
		"RELATION_TYPES_PREDECESSORS": 3,
		"RELATION_TYPES_SUCCESSORS":   4,
		"RELATION_TYPES_RELATES_TO":   5,
		"RELATION_TYPES_BLOCKED_BY":   6,
	}
)

func (x RELATION_TYPES) Enum() *RELATION_TYPES {
	p := new(RELATION_TYPES)
	*p = x
	return p
}

func (x RELATION_TYPES) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RELATION_TYPES) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[2].Descriptor()
}

func (RELATION_TYPES) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[2]
}

func (x RELATION_TYPES) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RELATION_TYPES.Descriptor instead.
func (RELATION_TYPES) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

type SCRUM_ROLE_TYPES int32

const (
	SCRUM_ROLE_TYPES_SCRUM_ROLE_TYPES_UNSPECIFIED SCRUM_ROLE_TYPES = 0
	SCRUM_ROLE_TYPES_SCRUM_ROLE_TYPES_PO		  SCRUM_ROLE_TYPES = 1
	SCRUM_ROLE_TYPES_SCRUM_ROLE_TYPES_SM		  SCRUM_ROLE_TYPES = 2
	SCRUM_ROLE_TYPES_SCRUM_ROLE_TYPES_MEMBER	  SCRUM_ROLE_TYPES = 3
	SCRUM_ROLE_TYPES_SCRUM_ROLE_TYPES_O			  SCRUM_ROLE_TYPES = 4
)

// Enum value maps for SCRUM_ROLE_TYPES.
var (
	SCRUM_ROLE_TYPES_name = map[int32]string{
		0: "SCRUM_ROLE_TYPES_UNSPECIFIED",
		1: "SCRUM_ROLE_TYPES_PO",
		2: "SCRUM_ROLE_TYPES_SM",
		3: "SCRUM_ROLE_TYPES_MEMBER",
		4: "SCRUM_ROLE_TYPES_O",
	}
	SCRUM_ROLE_TYPES_value = map[string]int32{
		"SCRUM_ROLE_TYPES_UNSPECIFIED": 0,
		"SCRUM_ROLE_TYPES_PO":			1,
		"SCRUM_ROLE_TYPES_SM":			2,
		"SCRUM_ROLE_TYPES_MEMBER":		3,
		"SCRUM_ROLE_TYPES_O":			4,
	}
)

func (x SCRUM_ROLE_TYPES) Enum() *SCRUM_ROLE_TYPES {
	p := new(SCRUM_ROLE_TYPES)
	*p = x
	return p
}

func (x SCRUM_ROLE_TYPES) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SCRUM_ROLE_TYPES) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[3].Descriptor()
}

func (SCRUM_ROLE_TYPES) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[3]
}

func (x SCRUM_ROLE_TYPES) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SCRUM_ROLE_TYPES.Descriptor instead.
func (SCRUM_ROLE_TYPES) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{3}
}

type Comment struct {
	state		  protoimpl.MessageState
	sizeCache	  protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID		  string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UUID	  string `protobuf:"bytes,2,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Content	  string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	UpdatedBy string `protobuf:"bytes,4,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	UpdatedAt string `protobuf:"bytes,5,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Comment) Reset() {
	*x = Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

func (x *Comment) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Comment) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *Comment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Comment) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *Comment) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type CommonDate struct {
	state		  protoimpl.MessageState
	sizeCache	  protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt	string	`protobuf:"bytes,1,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	CreatedBy	string	`protobuf:"bytes,2,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	UpdatedAt	string	`protobuf:"bytes,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	UpdatedBy	string	`protobuf:"bytes,4,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	StartedAt	*string `protobuf:"bytes,5,opt,name=startedAt,proto3,oneof" json:"startedAt,omitempty"`
	StartedBy	*string `protobuf:"bytes,6,opt,name=startedBy,proto3,oneof" json:"startedBy,omitempty"`
	StartDate	*string `protobuf:"bytes,7,opt,name=startDate,proto3,oneof" json:"startDate,omitempty"`
	EndDate		*string `protobuf:"bytes,8,opt,name=endDate,proto3,oneof" json:"endDate,omitempty"`
	CompletedAt *string `protobuf:"bytes,9,opt,name=completedAt,proto3,oneof" json:"completedAt,omitempty"`
	CompletedBy *string `protobuf:"bytes,10,opt,name=completedBy,proto3,oneof" json:"completedBy,omitempty"`
}

func (x *CommonDate) Reset() {
	*x = CommonDate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonDate) ProtoMessage() {}

func (x *CommonDate) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonDate.ProtoReflect.Descriptor instead.
func (*CommonDate) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

func (x *CommonDate) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CommonDate) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *CommonDate) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *CommonDate) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *CommonDate) GetStartedAt() string {
	if x != nil && x.StartedAt != nil {
		return *x.StartedAt
	}
	return ""
}

func (x *CommonDate) GetStartedBy() string {
	if x != nil && x.StartedBy != nil {
		return *x.StartedBy
	}
	return ""
}

func (x *CommonDate) GetStartDate() string {
	if x != nil && x.StartDate != nil {
		return *x.StartDate
	}
	return ""
}

func (x *CommonDate) GetEndDate() string {
	if x != nil && x.EndDate != nil {
		return *x.EndDate
	}
	return ""
}

func (x *CommonDate) GetCompletedAt() string {
	if x != nil && x.CompletedAt != nil {
		return *x.CompletedAt
	}
	return ""
}

func (x *CommonDate) GetCompletedBy() string {
	if x != nil && x.CompletedBy != nil {
		return *x.CompletedBy
	}
	return ""
}

type Duration struct {
	state		  protoimpl.MessageState
	sizeCache	  protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID		  string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UUID	  string `protobuf:"bytes,2,opt,name=UUID,proto3" json:"UUID,omitempty"`
	StartDate string `protobuf:"bytes,3,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate	  string `protobuf:"bytes,4,opt,name=endDate,proto3" json:"endDate,omitempty"`
}

func (x *Duration) Reset() {
	*x = Duration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Duration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Duration) ProtoMessage() {}

func (x *Duration) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Duration.ProtoReflect.Descriptor instead.
func (*Duration) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

func (x *Duration) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Duration) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *Duration) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *Duration) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

type IdUuidStatus struct {
	state		  protoimpl.MessageState
	sizeCache	  protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID	   string				`protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UUID   string				`protobuf:"bytes,2,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Status GENERAL_STATUS_TYPES `protobuf:"varint,3,opt,name=status,proto3,enum=common.GENERAL_STATUS_TYPES" json:"status,omitempty"`
}

func (x *IdUuidStatus) Reset() {
	*x = IdUuidStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdUuidStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdUuidStatus) ProtoMessage() {}

func (x *IdUuidStatus) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdUuidStatus.ProtoReflect.Descriptor instead.
func (*IdUuidStatus) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{3}
}

func (x *IdUuidStatus) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *IdUuidStatus) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *IdUuidStatus) GetStatus() GENERAL_STATUS_TYPES {
	if x != nil {
		return x.Status
	}
	return GENERAL_STATUS_TYPES_GENERAL_STATUS_TYPES_UNSPECIFIED
}

type IdUuid struct {
	state		  protoimpl.MessageState
	sizeCache	  protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID	 string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UUID string `protobuf:"bytes,2,opt,name=UUID,proto3" json:"UUID,omitempty"`
}

func (x *IdUuid) Reset() {
	*x = IdUuid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdUuid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdUuid) ProtoMessage() {}

func (x *IdUuid) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdUuid.ProtoReflect.Descriptor instead.
func (*IdUuid) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{4}
}

func (x *IdUuid) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *IdUuid) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

type NameUrl struct {
	state		  protoimpl.MessageState
	sizeCache	  protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url	 string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *NameUrl) Reset() {
	*x = NameUrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NameUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameUrl) ProtoMessage() {}

func (x *NameUrl) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameUrl.ProtoReflect.Descriptor instead.
func (*NameUrl) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{5}
}

func (x *NameUrl) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NameUrl) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Pagination struct {
	state		  protoimpl.MessageState
	sizeCache	  protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Skip int32 `protobuf:"varint,1,opt,name=skip,proto3" json:"skip,omitempty"`
	Take int32 `protobuf:"varint,2,opt,name=take,proto3" json:"take,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{6}
}

func (x *Pagination) GetSkip() int32 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *Pagination) GetTake() int32 {
	if x != nil {
		return x.Take
	}
	return 0
}

type Relation struct {
	state		  protoimpl.MessageState
	sizeCache	  protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UUID		 string			`protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	RelationType RELATION_TYPES `protobuf:"varint,2,opt,name=relationType,proto3,enum=common.RELATION_TYPES" json:"relationType,omitempty"`
	SourceUUID	 string			`protobuf:"bytes,3,opt,name=sourceUUID,proto3" json:"sourceUUID,omitempty"`
	TargetUUID	 string			`protobuf:"bytes,4,opt,name=targetUUID,proto3" json:"targetUUID,omitempty"`
	CreatedAt	 string			`protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt	 string			`protobuf:"bytes,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Relation) Reset() {
	*x = Relation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Relation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Relation) ProtoMessage() {}

func (x *Relation) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Relation.ProtoReflect.Descriptor instead.
func (*Relation) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{7}
}

func (x *Relation) GetUUID() string {
	if x != nil {
		return x.UUID
	}
	return ""
}

func (x *Relation) GetRelationType() RELATION_TYPES {
	if x != nil {
		return x.RelationType
	}
	return RELATION_TYPES_RELATION_TYPES_UNSPECIFIED
}

func (x *Relation) GetSourceUUID() string {
	if x != nil {
		return x.SourceUUID
	}
	return ""
}

func (x *Relation) GetTargetUUID() string {
	if x != nil {
		return x.TargetUUID
	}
	return ""
}

func (x *Relation) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Relation) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

var File_common_proto protoreflect.FileDescriptor

var file_common_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x83, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb0, 0x03, 0x0a,
	0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x21, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x42, 0x79, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x04, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22,
	0x66, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x55,
	0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x68, 0x0a, 0x0c, 0x49, 0x64, 0x55, 0x75, 0x69,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x53, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x2c, 0x0a, 0x06, 0x49, 0x64, 0x55, 0x75, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x55,
	0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x22,
	0x2f, 0x0a, 0x07, 0x4e, 0x61, 0x6d, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x22, 0x34, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6b,
	0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x61, 0x6b, 0x65, 0x22, 0xd6, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x3a, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x53, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x55, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55,
	0x55, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x55, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55,
	0x55, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2a,
	0xce, 0x02, 0x0a, 0x14, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x53, 0x12, 0x24, 0x0a, 0x20, 0x47, 0x45, 0x4e, 0x45,
	0x52, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x53,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x21,
	0x0a, 0x1d, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x53, 0x5f, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10,
	0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45,
	0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x53, 0x5f, 0x50, 0x4c, 0x41, 0x4e, 0x4e,
	0x45, 0x44, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x53, 0x5f, 0x54, 0x4f, 0x44,
	0x4f, 0x10, 0x04, 0x12, 0x24, 0x0a, 0x20, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x53, 0x5f, 0x49, 0x4e, 0x5f, 0x50,
	0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x05, 0x12, 0x1d, 0x0a, 0x19, 0x47, 0x45, 0x4e,
	0x45, 0x52, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x53, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x06, 0x12, 0x22, 0x0a, 0x1e, 0x47, 0x45, 0x4e, 0x45,
	0x52, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x53,
	0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x07, 0x12, 0x22, 0x0a, 0x1e,
	0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x08,
	0x2a, 0xf5, 0x01, 0x0a, 0x12, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x52, 0x4f, 0x4c,
	0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x53, 0x12, 0x22, 0x0a, 0x1e, 0x50, 0x52, 0x4f, 0x4a, 0x45,
	0x43, 0x54, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x53, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x50,
	0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x53, 0x5f, 0x50, 0x4d, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43,
	0x54, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x53, 0x5f, 0x45, 0x4d, 0x10,
	0x02, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x52, 0x4f, 0x4c,
	0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x53, 0x5f, 0x44, 0x45, 0x56, 0x10, 0x03, 0x12, 0x19, 0x0a,
	0x15, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x53, 0x5f, 0x51, 0x41, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x52, 0x4f, 0x4a,
	0x45, 0x43, 0x54, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x53, 0x5f, 0x42,
	0x41, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x52,
	0x4f, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x53, 0x5f, 0x55, 0x58, 0x10, 0x06, 0x12, 0x18,
	0x0a, 0x14, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x53, 0x5f, 0x4f, 0x10, 0x07, 0x2a, 0xe6, 0x01, 0x0a, 0x0e, 0x52, 0x45, 0x4c,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x53, 0x12, 0x1e, 0x0a, 0x1a, 0x52,
	0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x53, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x52,
	0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x53, 0x5f, 0x50, 0x41,
	0x52, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x53, 0x5f, 0x53, 0x55, 0x42, 0x54, 0x41, 0x53, 0x4b,
	0x53, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x53, 0x5f, 0x50, 0x52, 0x45, 0x44, 0x45, 0x43, 0x45, 0x53, 0x53, 0x4f,
	0x52, 0x53, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x4f, 0x52,
	0x53, 0x10, 0x04, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x53, 0x5f, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x45, 0x53, 0x5f, 0x54, 0x4f,
	0x10, 0x05, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x53, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x5f, 0x42, 0x59, 0x10,
	0x06, 0x2a, 0x9b, 0x01, 0x0a, 0x10, 0x53, 0x43, 0x52, 0x55, 0x4d, 0x5f, 0x52, 0x4f, 0x4c, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x53, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x43, 0x52, 0x55, 0x4d, 0x5f,
	0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x43, 0x52, 0x55,
	0x4d, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x53, 0x5f, 0x50, 0x4f, 0x10,
	0x01, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x43, 0x52, 0x55, 0x4d, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x53, 0x5f, 0x53, 0x4d, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x43,
	0x52, 0x55, 0x4d, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x53, 0x5f, 0x4d,
	0x45, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x43, 0x52, 0x55, 0x4d,
	0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x53, 0x5f, 0x4f, 0x10, 0x04, 0x42,
	0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_common_proto_rawDescOnce sync.Once
	file_common_proto_rawDescData = file_common_proto_rawDesc
)

func file_common_proto_rawDescGZIP() []byte {
	file_common_proto_rawDescOnce.Do(func() {
		file_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_proto_rawDescData)
	})
	return file_common_proto_rawDescData
}

var file_common_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_common_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_common_proto_goTypes = []interface{}{
	(GENERAL_STATUS_TYPES)(0), // 0: common.GENERAL_STATUS_TYPES
	(PROJECT_ROLE_TYPES)(0),   // 1: common.PROJECT_ROLE_TYPES
	(RELATION_TYPES)(0),	   // 2: common.RELATION_TYPES
	(SCRUM_ROLE_TYPES)(0),	   // 3: common.SCRUM_ROLE_TYPES
	(*Comment)(nil),		   // 4: common.Comment
	(*CommonDate)(nil),		   // 5: common.CommonDate
	(*Duration)(nil),		   // 6: common.Duration
	(*IdUuidStatus)(nil),	   // 7: common.IdUuidStatus
	(*IdUuid)(nil),			   // 8: common.IdUuid
	(*NameUrl)(nil),		   // 9: common.NameUrl
	(*Pagination)(nil),		   // 10: common.Pagination
	(*Relation)(nil),		   // 11: common.Relation
}
var file_common_proto_depIdxs = []int32{
	0, // 0: common.IdUuidStatus.status:type_name -> common.GENERAL_STATUS_TYPES
	2, // 1: common.Relation.relationType:type_name -> common.RELATION_TYPES
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_common_proto_init() }
func file_common_proto_init() {
	if File_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonDate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Duration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdUuidStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdUuid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NameUrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Relation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_common_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_proto_rawDesc,
			NumEnums:	   4,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:		   file_common_proto_goTypes,
		DependencyIndexes: file_common_proto_depIdxs,
		EnumInfos:		   file_common_proto_enumTypes,
		MessageInfos:	   file_common_proto_msgTypes,
	}.Build()
	File_common_proto = out.File
	file_common_proto_rawDesc = nil
	file_common_proto_goTypes = nil
	file_common_proto_depIdxs = nil
}
